---
const title = "2進数とデジタルの基礎";
const description = "アナログとデジタルの違いから2進数の概念まで、コンピュータの基本を学習します";
const chapter = "binary-basics";
const slideNumber = 1;
const totalSlides = 8;
const estimatedTime = 15;

const slides = [
  {
    id: 1,
    title: "学習目標",
    content: `
      <div>
        <h1>2進数とデジタルの基礎</h1>
        <h2>🎯 学習目標</h2>
        <p>この単元では、アナログとデジタルの違いを理解し、コンピュータがなぜ2進数を使うのかを学習します。</p>
        <div style="margin-top: 2rem; padding: 1.5rem; background: #f0f9ff; border-radius: 0.75rem; border: 1px solid #0ea5e9;">
          <h3 style="color: #0ea5e9; margin-bottom: 1rem;">📚 このレッスンで学ぶこと</h3>
          <ul style="list-style: none; padding: 0;">
            <li style="margin-bottom: 0.5rem;">✓ アナログとデジタルの違い</li>
            <li style="margin-bottom: 0.5rem;">✓ コンピュータが2進数を使う理由</li>
            <li style="margin-bottom: 0.5rem;">✓ 2進数から10進数への変換方法</li>
            <li style="margin-bottom: 0.5rem;">✓ 位の概念（8,4,2,1の位）</li>
            <li style="margin-bottom: 0.5rem;">✓ インタラクティブな変換ツールの使い方</li>
            <li>✓ 2進数の実生活での応用</li>
          </ul>
        </div>
        <div style="background: #fef3c7; padding: 1.5rem; border-radius: 0.75rem; margin-top: 2rem; border: 1px solid #f59e0b;">
          <h3>⏱️ 推定学習時間</h3>
          <p style="font-size: 1.1rem; font-weight: 600;">約15分</p>
        </div>
      </div>
    `
  },
  {
    id: 2,
    title: "アナログとデジタル",
    content: `
      <div>
        <h1>アナログとデジタルの違い</h1>
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin: 2rem 0;">
          <div style="background: #f0fdf4; padding: 2rem; border-radius: 1rem; border: 1px solid #22c55e;">
            <h2 style="color: #22c55e; margin-bottom: 1rem;">📡 アナログ</h2>
            <p style="margin-bottom: 1rem;">連続的に変化する量</p>
            <div style="background: white; padding: 1rem; border-radius: 0.5rem; margin: 1rem 0;">
              <div style="height: 60px; background: linear-gradient(90deg, #22c55e 0%, #fbbf24 50%, #ef4444 100%); border-radius: 0.25rem; position: relative;">
                <div style="position: absolute; bottom: -20px; left: 0; font-size: 0.75rem;">0</div>
                <div style="position: absolute; bottom: -20px; right: 0; font-size: 0.75rem;">100</div>
                <div style="position: absolute; bottom: -20px; left: 50%; transform: translateX(-50%); font-size: 0.75rem;">50</div>
              </div>
            </div>
            <p style="font-size: 0.9rem; color: #374151;">例：温度、音量、色の濃さ</p>
          </div>
          
          <div style="background: #eff6ff; padding: 2rem; border-radius: 1rem; border: 1px solid #3b82f6;">
            <h2 style="color: #3b82f6; margin-bottom: 1rem;">🔢 デジタル</h2>
            <p style="margin-bottom: 1rem;">段階的に変化する量</p>
            <div style="background: white; padding: 1rem; border-radius: 0.5rem; margin: 1rem 0;">
              <div style="display: flex; gap: 4px; height: 60px; align-items: end;">
                <div style="width: 15px; height: 20%; background: #3b82f6; border-radius: 2px;"></div>
                <div style="width: 15px; height: 40%; background: #3b82f6; border-radius: 2px;"></div>
                <div style="width: 15px; height: 60%; background: #3b82f6; border-radius: 2px;"></div>
                <div style="width: 15px; height: 80%; background: #3b82f6; border-radius: 2px;"></div>
                <div style="width: 15px; height: 100%; background: #3b82f6; border-radius: 2px;"></div>
              </div>
            </div>
            <p style="font-size: 0.9rem; color: #374151;">例：階段、デジタル時計、コンピュータ</p>
          </div>
        </div>
        
        <div style="background: #fdf2f8; padding: 2rem; border-radius: 1rem; margin-top: 2rem; border: 1px solid #ec4899;">
          <h3 style="color: #ec4899;">💡 身近な例で考えてみよう</h3>
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-top: 1rem;">
            <div>
              <strong>アナログ時計</strong>
              <p style="font-size: 0.9rem;">針が滑らかに動く</p>
            </div>
            <div>
              <strong>デジタル時計</strong>
              <p style="font-size: 0.9rem;">数字が1秒ずつ変わる</p>
            </div>
          </div>
        </div>
      </div>
    `
  },
  {
    id: 3,
    title: "なぜ2進数なのか",
    content: `
      <div>
        <h1>コンピュータが2進数を使う理由</h1>
        <div style="text-align: center; margin: 2rem 0;">
          <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; border-radius: 1rem;">
            <h2 style="color: white; margin-bottom: 1rem;">⚡ 電気の状態は2つだけ</h2>
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-top: 2rem;">
              <div style="background: rgba(255,255,255,0.1); padding: 1.5rem; border-radius: 0.75rem;">
                <div style="font-size: 3rem; margin-bottom: 0.5rem;">💡</div>
                <h3 style="color: white;">ON（オン）</h3>
                <p style="color: rgba(255,255,255,0.9);">電流が流れている = 1</p>
              </div>
              <div style="background: rgba(255,255,255,0.1); padding: 1.5rem; border-radius: 0.75rem;">
                <div style="font-size: 3rem; margin-bottom: 0.5rem;">⚫</div>
                <h3 style="color: white;">OFF（オフ）</h3>
                <p style="color: rgba(255,255,255,0.9);">電流が流れていない = 0</p>
              </div>
            </div>
          </div>
        </div>
        
        <div style="background: #f0fdf4; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #22c55e;">
          <h3 style="color: #22c55e;">🔍 身近な例</h3>
          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-top: 1rem;">
            <div style="text-align: center; padding: 1rem;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">🔦</div>
              <strong>懐中電灯</strong>
              <p style="font-size: 0.9rem;">点いている / 消えている</p>
            </div>
            <div style="text-align: center; padding: 1rem;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">🚦</div>
              <strong>信号機</strong>
              <p style="font-size: 0.9rem;">赤が点灯 / 消灯</p>
            </div>
            <div style="text-align: center; padding: 1rem;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">💡</div>
              <strong>電球</strong>
              <p style="font-size: 0.9rem;">明るい / 暗い</p>
            </div>
          </div>
        </div>
        
        <div style="background: #fef3c7; padding: 2rem; border-radius: 1rem; border: 1px solid #f59e0b;">
          <h3 style="color: #f59e0b;">⚙️ コンピュータの中では</h3>
          <p>何億個もの小さなスイッチ（トランジスタ）が ON と OFF を繰り返して、すべての計算や処理を行っています。</p>
          <p style="margin-top: 1rem; font-weight: 600;">だから2進数（0と1）がコンピュータの言語なのです！</p>
        </div>
      </div>
    `
  },
  {
    id: 4,
    title: "2進数の位の概念",
    content: `
      <div>
        <h1>2進数の位を理解しよう</h1>
        <p>2進数では、各位の値が右から「1, 2, 4, 8, 16...」と2倍ずつ増えていきます。</p>
        
        <div style="background: #f8fafc; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #e2e8f0;">
          <h3>📊 位の値（4桁の場合）</h3>
          <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 1rem; margin: 2rem 0;">
            <div style="background: #fdf2f8; padding: 1.5rem; border-radius: 0.75rem; text-align: center; border: 2px solid #ec4899;">
              <div style="font-size: 2rem; font-weight: bold; color: #ec4899;">8</div>
              <div style="font-size: 0.875rem; color: #6b7280;">8の位</div>
              <div style="margin-top: 0.5rem; font-size: 3rem;">⬜</div>
            </div>
            <div style="background: #fef3c7; padding: 1.5rem; border-radius: 0.75rem; text-align: center; border: 2px solid #f59e0b;">
              <div style="font-size: 2rem; font-weight: bold; color: #f59e0b;">4</div>
              <div style="font-size: 0.875rem; color: #6b7280;">4の位</div>
              <div style="margin-top: 0.5rem; font-size: 3rem;">⬜</div>
            </div>
            <div style="background: #dcfce7; padding: 1.5rem; border-radius: 0.75rem; text-align: center; border: 2px solid #22c55e;">
              <div style="font-size: 2rem; font-weight: bold; color: #22c55e;">2</div>
              <div style="font-size: 0.875rem; color: #6b7280;">2の位</div>
              <div style="margin-top: 0.5rem; font-size: 3rem;">⬜</div>
            </div>
            <div style="background: #dbeafe; padding: 1.5rem; border-radius: 0.75rem; text-align: center; border: 2px solid #3b82f6;">
              <div style="font-size: 2rem; font-weight: bold; color: #3b82f6;">1</div>
              <div style="font-size: 0.875rem; color: #6b7280;">1の位</div>
              <div style="margin-top: 0.5rem; font-size: 3rem;">⬜</div>
            </div>
          </div>
        </div>
        
        <div style="background: #f0f9ff; padding: 2rem; border-radius: 1rem; border: 1px solid #0ea5e9;">
          <h3 style="color: #0ea5e9;">💡 具体例：2進数「1101」を10進数に変換</h3>
          <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 1rem; margin: 2rem 0;">
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem; text-align: center;">
              <div style="font-size: 1.5rem; color: #ec4899; font-weight: bold;">8の位</div>
              <div style="font-size: 3rem; margin: 0.5rem 0; color: #ec4899;">1</div>
              <div style="font-size: 1rem;">8 × 1 = 8</div>
            </div>
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem; text-align: center;">
              <div style="font-size: 1.5rem; color: #f59e0b; font-weight: bold;">4の位</div>
              <div style="font-size: 3rem; margin: 0.5rem 0; color: #f59e0b;">1</div>
              <div style="font-size: 1rem;">4 × 1 = 4</div>
            </div>
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem; text-align: center;">
              <div style="font-size: 1.5rem; color: #22c55e; font-weight: bold;">2の位</div>
              <div style="font-size: 3rem; margin: 0.5rem 0; color: #22c55e;">0</div>
              <div style="font-size: 1rem;">2 × 0 = 0</div>
            </div>
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem; text-align: center;">
              <div style="font-size: 1.5rem; color: #3b82f6; font-weight: bold;">1の位</div>
              <div style="font-size: 3rem; margin: 0.5rem 0; color: #3b82f6;">1</div>
              <div style="font-size: 1rem;">1 × 1 = 1</div>
            </div>
          </div>
          <div style="text-align: center; background: white; padding: 1.5rem; border-radius: 0.75rem; margin-top: 1rem;">
            <h4 style="color: #111827; margin-bottom: 1rem;">計算：8 + 4 + 0 + 1 = 13</h4>
            <p style="font-size: 1.25rem; font-weight: bold;">2進数「1101」= 10進数「13」</p>
          </div>
        </div>
      </div>
    `
  },
  {
    id: 5,
    title: "インタラクティブ変換ツール",
    content: `
      <div>
        <h1>2進数変換ツール</h1>
        <p>下のボタンをクリックして、2進数の各位のON/OFFを切り替えてみましょう！</p>
        
        <div style="background: #f8fafc; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #e2e8f0;">
          <div id="binary-converter">
            <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 1rem; margin-bottom: 2rem;">
              <div style="text-align: center;">
                <div style="background: #fdf2f8; padding: 1rem; border-radius: 0.75rem; border: 2px solid #ec4899;">
                  <div style="font-size: 1.5rem; font-weight: bold; color: #ec4899;">8の位</div>
                  <button onclick="toggleBit(3)" id="bit-3" style="margin: 1rem 0; font-size: 3rem; background: #ef4444; color: white; border: none; border-radius: 0.5rem; padding: 1rem; cursor: pointer; width: 100%;">0</button>
                  <div id="calc-3" style="font-size: 1rem;">8 × 0 = 0</div>
                </div>
              </div>
              <div style="text-align: center;">
                <div style="background: #fef3c7; padding: 1rem; border-radius: 0.75rem; border: 2px solid #f59e0b;">
                  <div style="font-size: 1.5rem; font-weight: bold; color: #f59e0b;">4の位</div>
                  <button onclick="toggleBit(2)" id="bit-2" style="margin: 1rem 0; font-size: 3rem; background: #ef4444; color: white; border: none; border-radius: 0.5rem; padding: 1rem; cursor: pointer; width: 100%;">0</button>
                  <div id="calc-2" style="font-size: 1rem;">4 × 0 = 0</div>
                </div>
              </div>
              <div style="text-align: center;">
                <div style="background: #dcfce7; padding: 1rem; border-radius: 0.75rem; border: 2px solid #22c55e;">
                  <div style="font-size: 1.5rem; font-weight: bold; color: #22c55e;">2の位</div>
                  <button onclick="toggleBit(1)" id="bit-1" style="margin: 1rem 0; font-size: 3rem; background: #ef4444; color: white; border: none; border-radius: 0.5rem; padding: 1rem; cursor: pointer; width: 100%;">0</button>
                  <div id="calc-1" style="font-size: 1rem;">2 × 0 = 0</div>
                </div>
              </div>
              <div style="text-align: center;">
                <div style="background: #dbeafe; padding: 1rem; border-radius: 0.75rem; border: 2px solid #3b82f6;">
                  <div style="font-size: 1.5rem; font-weight: bold; color: #3b82f6;">1の位</div>
                  <button onclick="toggleBit(0)" id="bit-0" style="margin: 1rem 0; font-size: 3rem; background: #ef4444; color: white; border: none; border-radius: 0.5rem; padding: 1rem; cursor: pointer; width: 100%;">0</button>
                  <div id="calc-0" style="font-size: 1rem;">1 × 0 = 0</div>
                </div>
              </div>
            </div>
            
            <div style="text-align: center; background: white; padding: 2rem; border-radius: 1rem; margin-top: 2rem; border: 2px solid #3b82f6;">
              <h3>結果</h3>
              <div style="margin: 1rem 0;">
                <span style="font-size: 1.5rem; font-weight: bold;">2進数：</span>
                <span id="binary-result" style="font-size: 2rem; font-weight: bold; color: #3b82f6; font-family: monospace;">0000</span>
              </div>
              <div style="margin: 1rem 0;">
                <span style="font-size: 1.5rem; font-weight: bold;">10進数：</span>
                <span id="decimal-result" style="font-size: 2rem; font-weight: bold; color: #ec4899;">0</span>
              </div>
              <div id="calculation" style="margin-top: 1rem; color: #6b7280;">0 + 0 + 0 + 0 = 0</div>
            </div>
          </div>
        </div>
        
        <div style="background: #fef3c7; padding: 1.5rem; border-radius: 0.75rem; margin-top: 2rem; border: 1px solid #f59e0b;">
          <h3>🎯 チャレンジ</h3>
          <p>以下の数字を2進数で表現してみましょう：</p>
          <ul style="margin-top: 1rem;">
            <li>5 → ？</li>
            <li>9 → ？</li>
            <li>15 → ？</li>
          </ul>
        </div>
      </div>
    `
  },
  {
    id: 6,
    title: "10進数から2進数への変換",
    content: `
      <div>
        <h1>10進数から2進数への変換方法</h1>
        <p style="text-align: center; font-size: 1.2rem; margin-bottom: 3rem; color: #374151;">
          10進数を2進数に変換する2つの代表的な方法を学習しましょう
        </p>
        
        <!-- 方法1: 割り算法 -->
        <div style="background: #f0f9ff; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #3b82f6;">
          <h2 style="color: #3b82f6; margin-bottom: 1.5rem;">📊 方法1: 割り算法（2で割り続ける）</h2>
          <p style="margin-bottom: 1.5rem;">2で割り続けて、余りを下から読み上げる方法です。</p>
          
          <div style="background: white; padding: 1.5rem; border-radius: 0.75rem; margin: 1rem 0;">
            <h3 style="color: #1f2937; margin-bottom: 1rem;">例：10進数の13を2進数に変換</h3>
            
            <div style="font-family: 'Courier New', monospace; font-size: 1.1rem; line-height: 1.8; background: #f8fafc; padding: 2rem; border-radius: 0.5rem; margin: 1rem 0; display: flex; flex-direction: column; align-items: center;">
              <div style="margin-bottom: 1rem;">
                <span style="color: #3b82f6; font-weight: bold;">2)</span><span style="text-decoration: overline;">13</span> = 6 ・・・ <span style="background: #fef3c7; padding: 0.2rem 0.5rem; border-radius: 0.25rem; color: #92400e; font-weight: bold;">1</span> ←④
              </div>
              <div style="margin-bottom: 1rem;">
                <span style="color: #3b82f6; font-weight: bold;">2)</span><span style="text-decoration: overline;"> 6</span> = 3 ・・・ <span style="background: #fef3c7; padding: 0.2rem 0.5rem; border-radius: 0.25rem; color: #92400e; font-weight: bold;">0</span> ←③
              </div>
              <div style="margin-bottom: 1rem;">
                <span style="color: #3b82f6; font-weight: bold;">2)</span><span style="text-decoration: overline;"> 3</span> = 1 ・・・ <span style="background: #fef3c7; padding: 0.2rem 0.5rem; border-radius: 0.25rem; color: #92400e; font-weight: bold;">1</span> ←②
              </div>
              <div style="margin-bottom: 1rem;">
                <span style="color: #3b82f6; font-weight: bold;">2)</span><span style="text-decoration: overline;"> 1</span> = 0 ・・・ <span style="background: #fef3c7; padding: 0.2rem 0.5rem; border-radius: 0.25rem; color: #92400e; font-weight: bold;">1</span> ←①
              </div>
            </div>
            
            <div style="background: #f0fdf4; padding: 1rem; border-radius: 0.5rem; margin-top: 1.5rem;">
              <div style="text-align: center; margin-bottom: 1rem; color: #166534; font-weight: bold;">余りを下から読み上げる</div>
              <div style="text-align: center; font-family: 'Courier New', monospace; font-size: 1.5rem;">
                ①②③④ → 
                <span style="background: #22c55e; color: white; padding: 0.3rem 0.6rem; border-radius: 0.5rem; margin-left: 0.5rem; font-weight: bold;">1101₂</span>
              </div>
            </div>
          </div>
        </div>
        
        <!-- 方法2: 引き算法 -->
        <div style="background: #f0fdf4; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #22c55e;">
          <h2 style="color: #22c55e; margin-bottom: 1.5rem;">🎯 方法2: 引き算法（2の累乗で引く）</h2>
          <p style="margin-bottom: 1.5rem;">大きな2の累乗から順番に引いていく方法です。</p>
          
          <div style="background: white; padding: 1.5rem; border-radius: 0.75rem; margin: 1rem 0;">
            <h3 style="color: #1f2937; margin-bottom: 1rem;">例：10進数の13を2進数に変換</h3>
            
            <!-- 2の累乗表 -->
            <div style="background: #f8fafc; padding: 1rem; border-radius: 0.5rem; margin-bottom: 1.5rem;">
              <h4 style="text-align: center; margin-bottom: 1rem; color: #475569;">2の累乗表</h4>
              <div style="display: flex; justify-content: center; gap: 1rem; font-family: monospace; align-items: end;">
                <div style="text-align: center;">
                  <div style="background: #e2e8f0; padding: 0.5rem; border-radius: 0.25rem; margin-bottom: 0.25rem; height: 2.5rem; display: flex; align-items: center; justify-content: center;">2³</div>
                  <div>8</div>
                </div>
                <div style="text-align: center;">
                  <div style="background: #e2e8f0; padding: 0.5rem; border-radius: 0.25rem; margin-bottom: 0.25rem; height: 2.5rem; display: flex; align-items: center; justify-content: center;">2²</div>
                  <div>4</div>
                </div>
                <div style="text-align: center;">
                  <div style="background: #e2e8f0; padding: 0.5rem; border-radius: 0.25rem; margin-bottom: 0.25rem; height: 2.5rem; display: flex; align-items: center; justify-content: center;">2¹</div>
                  <div>2</div>
                </div>
                <div style="text-align: center;">
                  <div style="background: #e2e8f0; padding: 0.5rem; border-radius: 0.25rem; margin-bottom: 0.25rem; height: 2.5rem; display: flex; align-items: center; justify-content: center;">2⁰</div>
                  <div>1</div>
                </div>
              </div>
            </div>
            
            <!-- 計算手順 -->
            <div style="background: #fef3c7; padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem;">
              <h4 style="color: #92400e; margin-bottom: 1rem;">計算手順</h4>
              <table style="width: 100%; max-width: 300px; margin: 0 auto; font-family: 'Courier New', monospace; border-collapse: collapse;">
                <tr style="line-height: 1.8;">
                  <td style="text-align: right; width: 8%; padding-right: 0.2rem;">13</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.1rem;">≥</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">8</td>
                  <td style="text-align: left; width: 10%; padding-left: 0.2rem;">(2³)</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: center; width: 4%;"><span style="color: #22c55e;">○</span></td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: right; width: 8%; padding-right: 0.1rem;">13</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.1rem;">-</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">8</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.2rem;">=</td>
                  <td style="text-align: left; width: 6%; padding-left: 0.2rem;">5</td>
                </tr>
                <tr style="line-height: 1.8;">
                  <td style="text-align: right; width: 8%; padding-right: 0.2rem;">5</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.1rem;">≥</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">4</td>
                  <td style="text-align: left; width: 10%; padding-left: 0.2rem;">(2²)</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: center; width: 4%;"><span style="color: #22c55e;">○</span></td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: right; width: 8%; padding-right: 0.1rem;">5</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.1rem;">-</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">4</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.2rem;">=</td>
                  <td style="text-align: left; width: 6%; padding-left: 0.2rem;">1</td>
                </tr>
                <tr style="line-height: 1.8;">
                  <td style="text-align: right; width: 8%; padding-right: 0.2rem;">1</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.1rem;">≥</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">2</td>
                  <td style="text-align: left; width: 10%; padding-left: 0.2rem;">(2¹)</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: center; width: 4%;"><span style="color: #ef4444;">×</span></td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: right; width: 8%; padding-right: 0.1rem;">1</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.1rem;">-</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">0</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.2rem;">=</td>
                  <td style="text-align: left; width: 6%; padding-left: 0.2rem;">1</td>
                </tr>
                <tr style="line-height: 1.8;">
                  <td style="text-align: right; width: 8%; padding-right: 0.2rem;">1</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.1rem;">≥</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">1</td>
                  <td style="text-align: left; width: 10%; padding-left: 0.2rem;">(2⁰)</td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: center; width: 4%;"><span style="color: #22c55e;">○</span></td>
                  <td style="text-align: center; width: 4%; padding: 0 0.2rem;">→</td>
                  <td style="text-align: right; width: 8%; padding-right: 0.1rem;">1</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.1rem;">-</td>
                  <td style="text-align: right; width: 6%; padding-right: 0.1rem;">1</td>
                  <td style="text-align: center; width: 3%; padding: 0 0.2rem;">=</td>
                  <td style="text-align: left; width: 6%; padding-left: 0.2rem;">0</td>
                </tr>
              </table>
            </div>
            
            <div style="text-align: center; margin-top: 1.5rem;">
              <div style="background: #dbeafe; padding: 1rem; border-radius: 0.5rem; display: inline-block;">
                <div style="color: #1e40af; margin-bottom: 0.5rem;">2進数の各桁</div>
                <div style="font-family: monospace; font-size: 1.5rem; font-weight: bold;">
                  <span style="color: #22c55e;">1</span>
                  <span style="color: #22c55e;">1</span>
                  <span style="color: #ef4444;">0</span>
                  <span style="color: #22c55e;">1</span>
                </div>
                <div style="font-size: 1.3rem; font-weight: bold; color: #22c55e; margin-top: 0.5rem;">
                  答え: 1101₂
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- どちらの方法を使うか -->
        <div style="background: #fdf2f8; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #ec4899;">
          <h2 style="color: #ec4899; margin-bottom: 1rem;">💡 どちらの方法を使うべき？</h2>
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem;">
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem;">
              <h3 style="color: #3b82f6;">割り算法</h3>
              <p style="font-size: 0.9rem; color: #6b7280;">✅ 機械的に計算できる<br>✅ 大きな数でも確実<br>⚠️ 計算ステップが多い</p>
            </div>
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem;">
              <h3 style="color: #22c55e;">引き算法</h3>
              <p style="font-size: 0.9rem; color: #6b7280;">✅ 2の累乗に慣れると速い<br>✅ 位の概念が理解しやすい<br>⚠️ 2の累乗を覚える必要</p>
            </div>
          </div>
        </div>
      </div>
    `
  },
  {
    id: 7,
    title: "練習問題",
    content: `
      <div>
        <h1>2進数変換 - 問題演習</h1>
        <div id="quiz-container">
          <div id="quiz-intro" style="text-align: center;">
            <p style="margin-bottom: 2rem;">20問の厳選された問題で2進数変換をマスターしましょう！</p>
            
            <div style="background: #f0f9ff; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #0ea5e9;">
              <h3 style="color: #0ea5e9; margin-bottom: 1rem;">📝 問題演習の特徴</h3>
              <ul style="margin-top: 1rem; list-style: none; padding: 0; text-align: left;">
                <li style="margin-bottom: 0.5rem;">✓ 2進数 ↔ 10進数の変換問題</li>
                <li style="margin-bottom: 0.5rem;">✓ 段階的な難易度設定</li>
                <li style="margin-bottom: 0.5rem;">✓ 詳細な解説とヒント付き</li>
                <li>✓ 正答率の記録</li>
              </ul>
            </div>
            
            <button onclick="startEmbeddedQuiz()" style="
              background: linear-gradient(135deg, #3b82f6, #1d4ed8); 
              color: white; 
              padding: 1.5rem 3rem; 
              border-radius: 1rem; 
              font-size: 1.25rem; 
              font-weight: 600; 
              border: none;
              cursor: pointer;
              box-shadow: 0 10px 25px -3px rgba(59, 130, 246, 0.3);
              transition: transform 0.2s ease;
            " onmouseover="this.style.transform='translateY(-2px)'" onmouseout="this.style.transform='translateY(0)'">
              🎯 問題演習を開始する
            </button>
          </div>
          
          <div id="quiz-app" style="display: none;">
            <!-- 名前入力 -->
            <div id="name-input-section" style="text-align: center; padding: 2rem;">
              <h3 style="margin-bottom: 1rem;">お名前を入力してください</h3>
              <p style="color: #6b7280; margin-bottom: 2rem;">修了証に記載するお名前をご入力ください</p>
              <input type="text" id="student-name" placeholder="お名前" style="padding: 1rem; font-size: 1.2rem; border: 2px solid #e2e8f0; border-radius: 0.5rem; margin-right: 1rem; width: 200px;">
              <button onclick="startQuizQuestions()" style="background: #22c55e; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;">開始</button>
            </div>
            
            <!-- 問題表示エリア -->
            <div id="question-section" style="display: none;">
              <div style="background: white; border-radius: 1rem; padding: 2rem; box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
                  <h3 id="question-counter" style="color: #3b82f6;">問題 1 / 20</h3>
                  <div style="background: #f1f5f9; padding: 0.5rem 1rem; border-radius: 0.5rem;">
                    <span style="color: #22c55e; font-weight: bold;">正解: <span id="correct-score">0</span></span>
                    <span style="color: #ef4444; font-weight: bold; margin-left: 1rem;">不正解: <span id="incorrect-score">0</span></span>
                  </div>
                </div>
                
                <div id="question-content">
                  <h4 id="question-title" style="margin-bottom: 1rem; color: #111827;"></h4>
                  <p id="question-description" style="font-size: 1.1rem; margin-bottom: 2rem; color: #374151;"></p>
                  
                  <div id="options-container" style="margin-bottom: 2rem;"></div>
                  
                  <div style="text-align: center;">
                    <button id="submit-answer" onclick="submitAnswer()" disabled style="background: #3b82f6; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;" disabled>回答する</button>
                  </div>
                </div>
                
                <div id="feedback-section" style="display: none; margin-top: 2rem;">
                  <div id="feedback-content"></div>
                  <div style="text-align: center; margin-top: 2rem;">
                    <button id="next-question" onclick="nextQuestion()" style="background: #22c55e; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;">次の問題</button>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- 結果表示 -->
            <div id="results-section" style="display: none; text-align: center; padding: 2rem;">
              <h3 style="margin-bottom: 2rem; color: #111827;">問題演習完了！</h3>
              <div id="final-score" style="font-size: 2rem; font-weight: bold; margin-bottom: 2rem;"></div>
              <div id="completion-message" style="margin-bottom: 2rem;"></div>
              <button onclick="resetQuiz()" style="background: #3b82f6; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;">もう一度挑戦</button>
            </div>
          </div>
        </div>
      </div>
    `
  },
  {
    id: 8,
    title: "まとめと応用",
    content: `
      <div>
        <h1>2進数の応用</h1>
        <div style="background: #f0fdf4; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #22c55e;">
          <h2 style="color: #22c55e;">🎉 お疲れさまでした！</h2>
          <p>この章で学んだことを復習しましょう：</p>
          <ul style="margin-top: 1rem;">
            <li>✅ アナログとデジタルの違い</li>
            <li>✅ コンピュータが2進数を使う理由</li>
            <li>✅ 2進数の位の概念（8,4,2,1）</li>
            <li>✅ 2進数と10進数の相互変換</li>
          </ul>
        </div>
        
        <div style="background: #fdf2f8; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #ec4899;">
          <h3 style="color: #ec4899;">🌟 実生活での応用</h3>
          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem; margin-top: 1rem;">
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">🖼️</div>
              <h4>デジタル画像</h4>
              <p style="font-size: 0.9rem;">各ピクセルの色情報を数値で表現</p>
            </div>
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">🎵</div>
              <h4>デジタル音楽</h4>
              <p style="font-size: 0.9rem;">音の波形を数値データに変換</p>
            </div>
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">🔐</div>
              <h4>暗号化</h4>
              <p style="font-size: 0.9rem;">セキュリティにも2進数が活用</p>
            </div>
            <div style="background: white; padding: 1.5rem; border-radius: 0.75rem;">
              <div style="font-size: 2rem; margin-bottom: 0.5rem;">🤖</div>
              <h4>人工知能</h4>
              <p style="font-size: 0.9rem;">AIの判断も最終的には0と1</p>
            </div>
          </div>
        </div>
        
        <div style="background: #fef3c7; padding: 2rem; border-radius: 1rem; margin: 2rem 0; border: 1px solid #f59e0b;">
          <h3 style="color: #f59e0b;">🚀 次のステップ</h3>
          <p>2進数をマスターしたあなたは、さらに深いコンピュータサイエンスの世界へ進む準備ができました：</p>
          <ul style="margin-top: 1rem;">
            <li>16進数（ヘキサデシマル）</li>
            <li>論理回路とブール代数</li>
            <li>データ構造とアルゴリズム</li>
            <li>プログラミング言語の学習</li>
          </ul>
        </div>
        
        <div style="text-align: center; background: #f1f5f9; padding: 2rem; border-radius: 0.75rem; margin-top: 2rem;">
          <h2>🎯 レッスン完了！</h2>
          <p style="font-size: 1.1rem; margin: 1rem 0;">コンピュータの基本言語である2進数を理解できました。</p>
          <div style="margin-top: 1.5rem; color: #6b7280;">
            <p>✅ 学習時間: 約15分</p>
            <p>🎉 2進数マスター認定！</p>
          </div>
        </div>
      </div>
    `
  }
];
---

<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>
    <meta name="description" content={description}>
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Noto+Sans+JP:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Inter', 'Noto Sans JP', sans-serif;
        height: 100vh;
        display: flex;
        flex-direction: column;
        background: #f8fafc;
      }

      @media (max-width: 768px) {
        body {
          height: auto;
          min-height: 100vh;
          overflow: visible;
        }
      }

      /* スライド内容のスクロール対応 */
      .slide-inner {
        overflow-y: visible;
        max-height: none;
      }

      /* ヘッダー */
      .slide-header {
        background: white;
        border-bottom: 1px solid #e2e8f0;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
        z-index: 10;
      }

      .header-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
        height: 4rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
      }

      .header-left {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .nav-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        background: white;
        color: #64748b;
        text-decoration: none;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
      }

      .nav-btn:hover:not(:disabled) {
        background: #f1f5f9;
        border-color: #cbd5e1;
      }

      .nav-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
      }

      .nav-btn.primary {
        background: #3b82f6;
        color: white;
        border-color: #3b82f6;
      }

      .nav-btn.primary:hover:not(:disabled) {
        background: #1d4ed8;
        border-color: #1d4ed8;
      }

      .lesson-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #374151;
        font-weight: 500;
      }

      .slide-counter {
        background: #f1f5f9;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-size: 0.875rem;
        font-weight: 600;
        color: #475569;
      }

      .header-right {
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .progress-container {
        height: 4px;
        background: #e2e8f0;
        position: relative;
      }

      .progress-bar {
        height: 100%;
        background: linear-gradient(90deg, #3b82f6, #06b6d4);
        transition: width 0.3s ease;
      }

      /* メインエリア */
      .slide-main {
        flex: 1;
        display: flex;
        align-items: flex-start;
        justify-content: center;
        padding: 2rem;
        overflow-y: auto;
        min-height: 0;
      }

      .slide-container {
        width: 100%;
        max-width: 1000px;
        height: auto;
        min-height: 100%;
      }

      .slide-content {
        display: none;
        width: 100%;
        height: auto;
      }

      .slide-content.active {
        display: block;
      }

      .slide-inner {
        background: white;
        border-radius: 1rem;
        box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);
        border: 1px solid #e2e8f0;
        padding: 3rem;
        width: 100%;
        height: auto;
        min-height: auto;
      }

      /* フッター */
      .slide-footer {
        background: white;
        border-top: 1px solid #e2e8f0;
        padding: 1rem;
      }

      .footer-content {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
      }

      .slide-thumbnails {
        display: flex;
        gap: 0.5rem;
        overflow-x: auto;
        padding: 0.5rem 0;
      }

      .thumbnail {
        min-width: 120px;
        padding: 0.75rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        background: white;
        cursor: pointer;
        transition: all 0.2s ease;
        text-align: left;
      }

      .thumbnail:hover {
        border-color: #3b82f6;
        background: #f0f9ff;
      }

      .thumbnail.active {
        border-color: #3b82f6;
        background: #3b82f6;
        color: white;
      }

      .thumbnail-number {
        font-size: 0.75rem;
        font-weight: 600;
        opacity: 0.8;
      }

      .thumbnail-title {
        font-size: 0.75rem;
        margin-top: 0.25rem;
        line-height: 1.3;
      }

      .keyboard-hints {
        color: #64748b;
        font-size: 0.875rem;
        white-space: nowrap;
      }

      /* スライドコンテンツのスタイル */
      .slide-inner h1 {
        font-size: 2.5rem;
        font-weight: 700;
        color: #111827;
        margin-bottom: 2rem;
        text-align: center;
        border-bottom: 4px solid #3b82f6;
        padding-bottom: 1rem;
      }

      .slide-inner h2 {
        font-size: 1.75rem;
        font-weight: 600;
        color: #1f2937;
        margin-top: 2rem;
        margin-bottom: 1rem;
      }

      .slide-inner h3 {
        font-size: 1.25rem;
        font-weight: 600;
        color: #374151;
        margin-top: 1.5rem;
        margin-bottom: 0.75rem;
      }

      .slide-inner p {
        color: #374151;
        line-height: 1.7;
        margin-bottom: 1rem;
        font-size: 1.1rem;
      }

      .slide-inner strong {
        color: #111827;
        font-weight: 600;
      }

      .slide-inner code {
        background: #f1f5f9;
        color: #e11d48;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        font-size: 0.9em;
      }

      .slide-inner pre {
        background: #1e293b;
        color: #f1f5f9;
        padding: 1rem;
        border-radius: 0.5rem;
        margin: 1rem 0;
        overflow-x: auto;
      }

      /* レスポンシブ */
      @media (max-width: 768px) {
        .header-content {
          padding: 0 0.5rem;
        }

        .lesson-info span {
          display: none;
        }

        .slide-main {
          padding: 1rem;
        }

        .slide-inner {
          padding: 2rem 1.5rem;
          min-height: 400px;
        }

        .slide-thumbnails {
          display: none;
        }

        .keyboard-hints {
          font-size: 0.75rem;
        }

        .slide-inner h1 {
          font-size: 2rem;
        }
      }
    </style>
</head>

<body>
  <div class="slide-player">
    <!-- ヘッダー -->
    <header class="slide-header">
      <div class="header-content">
        <div class="header-left">
          <a href="/lessons" class="nav-btn">
            🏠 <span>レッスン一覧</span>
          </a>
          <div class="lesson-info">
            🔢 <span>{title}</span>
          </div>
        </div>
        
        <div class="header-center">
          <span class="slide-counter" id="slide-counter">
            1 / {slides.length}
          </span>
        </div>
        
        <div class="header-right">
          <button onclick="goToSlide(0)" class="nav-btn" id="first-btn">
            ⏮️
          </button>
          <button onclick="prevSlide()" class="nav-btn" id="prev-btn">
            ◀️
          </button>
          <button onclick="nextSlide()" class="nav-btn primary" id="next-btn">
            次へ ▶️
          </button>
          <button onclick="goToSlide({slides.length - 1})" class="nav-btn" id="last-btn">
            ⏭️
          </button>
        </div>
      </div>
      
      <!-- プログレスバー -->
      <div class="progress-container">
        <div class="progress-bar" id="progress-bar"></div>
      </div>
    </header>

    <!-- スライドエリア -->
    <main class="slide-main">
      <div class="slide-container">
        {slides.map((slide, index) => (
          <div class={`slide-content ${index === 0 ? 'active' : ''}`} id={`slide-${index}`}>
            <div class="slide-inner">
              <div set:html={slide.content} />
            </div>
          </div>
        ))}
      </div>
    </main>

    <!-- フッター -->
    <footer class="slide-footer">
      <div class="footer-content">
        <div class="slide-thumbnails">
          {slides.map((slide, index) => (
            <button
              onclick={`goToSlide(${index})`}
              class={`thumbnail ${index === 0 ? 'active' : ''}`}
              id={`thumb-${index}`}
            >
              <div class="thumbnail-number">{index + 1}</div>
              <div class="thumbnail-title">{slide.title}</div>
            </button>
          ))}
        </div>
        
        <div class="keyboard-hints">
          🌟 キーボード: ← → スペース
        </div>
      </div>
    </footer>
  </div>

  <script define:vars={{ slides }}>
    let currentSlide = 0;
    const totalSlides = slides.length;

    // 2進数変換ツール用の変数
    let bits = [0, 0, 0, 0]; // 4つのビット（1,2,4,8の位）

    // ゲーム用の変数
    let currentQuestion = null;
    let questionType = 'binary-to-decimal'; // 'binary-to-decimal' or 'decimal-to-binary'
    let correctCount = 0;
    let incorrectCount = 0;

    function updateUI() {
      // スライドカウンター更新
      document.getElementById('slide-counter').textContent = `${currentSlide + 1} / ${totalSlides}`;
      
      // プログレスバー更新
      const progress = ((currentSlide + 1) / totalSlides) * 100;
      document.getElementById('progress-bar').style.width = `${progress}%`;
      
      // ボタン状態更新
      document.getElementById('first-btn').disabled = currentSlide === 0;
      document.getElementById('prev-btn').disabled = currentSlide === 0;
      document.getElementById('last-btn').disabled = currentSlide === totalSlides - 1;
      
      // 次へボタンのテキスト更新
      const nextBtn = document.getElementById('next-btn');
      nextBtn.textContent = currentSlide === totalSlides - 1 ? '完了 ✅' : '次へ ▶️';
      
      // スライド表示更新
      document.querySelectorAll('.slide-content').forEach((slide, index) => {
        if (index === currentSlide) {
          slide.classList.add('active');
        } else {
          slide.classList.remove('active');
        }
      });
      
      // サムネイル更新
      document.querySelectorAll('.thumbnail').forEach((thumb, index) => {
        thumb.classList.toggle('active', index === currentSlide);
      });
    }

    function nextSlide() {
      if (currentSlide < totalSlides - 1) {
        currentSlide++;
        updateUI();
      } else {
        // 完了時の処理
        window.location.href = '/lessons';
      }
    }

    function prevSlide() {
      if (currentSlide > 0) {
        currentSlide--;
        updateUI();
      }
    }

    function goToSlide(index) {
      if (index >= 0 && index < totalSlides) {
        currentSlide = index;
        updateUI();
      }
    }

    // 2進数変換ツールの関数
    function toggleBit(position) {
      bits[position] = bits[position] === 0 ? 1 : 0;
      updateConverter();
    }

    function updateConverter() {
      const values = [1, 2, 4, 8];
      let total = 0;
      let binaryString = '';
      let calculation = '';

      for (let i = 3; i >= 0; i--) {
        const bit = bits[i];
        const value = values[i];
        
        // ボタンの更新
        const button = document.getElementById(`bit-${i}`);
        if (button) {
          button.textContent = bit;
          button.style.background = bit === 1 ? '#22c55e' : '#ef4444';
        }
        
        // 計算の更新
        const calc = document.getElementById(`calc-${i}`);
        if (calc) {
          calc.textContent = `${value} × ${bit} = ${value * bit}`;
        }
        
        total += value * bit;
        binaryString = binaryString + bit;
        
        if (i > 0) calculation += `${value * bit} + `;
        else calculation += `${value * bit} = ${total}`;
      }

      // 結果の更新
      const binaryResult = document.getElementById('binary-result');
      const decimalResult = document.getElementById('decimal-result');
      const calculationDiv = document.getElementById('calculation');
      
      if (binaryResult) binaryResult.textContent = binaryString;
      if (decimalResult) decimalResult.textContent = total;
      if (calculationDiv) calculationDiv.textContent = calculation;
    }

    // ゲーム機能
    function generateQuestion() {
      questionType = Math.random() < 0.5 ? 'binary-to-decimal' : 'decimal-to-binary';
      
      if (questionType === 'binary-to-decimal') {
        // 2進数から10進数への変換問題
        const decimal = Math.floor(Math.random() * 16); // 0-15
        const binary = decimal.toString(2).padStart(4, '0');
        currentQuestion = { binary, decimal };
        
        document.getElementById('question').innerHTML = `2進数 <strong>${binary}</strong> を10進数に変換してください`;
      } else {
        // 10進数から2進数への変換問題
        const decimal = Math.floor(Math.random() * 16); // 0-15
        const binary = decimal.toString(2).padStart(4, '0');
        currentQuestion = { binary, decimal };
        
        document.getElementById('question').innerHTML = `10進数 <strong>${decimal}</strong> を2進数（4桁）に変換してください`;
      }

      // UI更新
      document.getElementById('start-btn').style.display = 'none';
      document.getElementById('answer-area').style.display = 'block';
      document.getElementById('answer-input').value = '';
      document.getElementById('feedback').innerHTML = '';
      document.getElementById('answer-input').focus();
    }

    function checkAnswer() {
      const input = document.getElementById('answer-input').value.trim();
      const feedback = document.getElementById('feedback');
      
      let isCorrect = false;
      let correctAnswer = '';
      
      if (questionType === 'binary-to-decimal') {
        correctAnswer = currentQuestion.decimal.toString();
        isCorrect = input === correctAnswer;
      } else {
        correctAnswer = currentQuestion.binary;
        isCorrect = input === correctAnswer;
      }
      
      if (isCorrect) {
        correctCount++;
        feedback.innerHTML = `<div style="background: #dcfce7; color: #22c55e; padding: 1rem; border-radius: 0.5rem; font-weight: bold;">🎉 正解！</div>`;
      } else {
        incorrectCount++;
        feedback.innerHTML = `<div style="background: #fee2e2; color: #ef4444; padding: 1rem; border-radius: 0.5rem; font-weight: bold;">❌ 不正解。正解は ${correctAnswer} です。</div>`;
      }
      
      // スコア更新
      document.getElementById('correct-count').textContent = correctCount;
      document.getElementById('incorrect-count').textContent = incorrectCount;
      
      // 次の問題ボタン
      setTimeout(() => {
        feedback.innerHTML += `<button onclick="generateQuestion()" style="background: #3b82f6; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer; margin-top: 1rem;">次の問題</button>`;
      }, 1500);
    }

    // エンターキーで回答
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Enter' && document.getElementById('answer-area').style.display !== 'none') {
        checkAnswer();
      } else if (e.key === 'ArrowRight' || e.key === ' ') {
        e.preventDefault();
        nextSlide();
      } else if (e.key === 'ArrowLeft') {
        e.preventDefault();
        prevSlide();
      } else if (e.key === 'Home') {
        e.preventDefault();
        goToSlide(0);
      } else if (e.key === 'End') {
        e.preventDefault();
        goToSlide(totalSlides - 1);
      }
    });

    // 埋め込み問題演習の変数
    let quizData = null;
    let currentQuestionIndex = 0;
    let selectedAnswer = null;
    let correctAnswers = 0;
    let incorrectAnswers = 0;
    let studentName = '';

    // 問題演習を開始
    async function startEmbeddedQuiz() {
      document.getElementById('quiz-intro').style.display = 'none';
      document.getElementById('quiz-app').style.display = 'block';
      
      // データが既に読み込まれているかチェック
      if (!quizData || !quizData.questions || quizData.questions.length === 0) {
        // ローディング表示
        document.getElementById('name-input-section').innerHTML = `
          <div style="text-align: center; padding: 2rem;">
            <div style="font-size: 1.5rem; margin-bottom: 1rem;">📚</div>
            <p>問題データを読み込み中...</p>
          </div>
        `;
        
        await loadQuizData();
      }
      
      // 名前が保存されているかチェック
      const savedName = localStorage.getItem('binaryQuizStudentName');
      if (savedName && savedName.trim()) {
        studentName = savedName;
        console.log('Using saved name for new quiz:', studentName);
        
        // 名前確認画面を表示
        document.getElementById('name-input-section').innerHTML = `
          <div style="text-align: center; padding: 2rem;">
            <h3 style="margin-bottom: 1rem;">🎯 問題演習開始！</h3>
            <p style="color: #6b7280; margin-bottom: 1rem;">${studentName}さん、問題演習を開始しますか？</p>
            <div style="margin-bottom: 2rem;">
              <button onclick="startQuizQuestions()" style="background: #22c55e; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer; margin-right: 1rem;">はい、開始！</button>
              <button onclick="resetStudentName()" style="background: #6b7280; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;">別の名前で開始</button>
            </div>
          </div>
        `;
      } else {
        // 初回の名前入力画面を表示
        document.getElementById('name-input-section').innerHTML = `
          <h3 style="margin-bottom: 1rem;">お名前を入力してください</h3>
          <p style="color: #6b7280; margin-bottom: 2rem;">修了証に記載するお名前をご入力ください</p>
          <input type="text" id="student-name" placeholder="お名前" style="padding: 1rem; font-size: 1.2rem; border: 2px solid #e2e8f0; border-radius: 0.5rem; margin-right: 1rem; width: 200px;">
          <button onclick="startQuizQuestions()" style="background: #22c55e; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;">開始</button>
        `;
      }
    }

    // 問題データを読み込み
    async function loadQuizData() {
      try {
        const response = await fetch('/questions/binary_conversion/questions.yaml');
        const yamlText = await response.text();
        quizData = parseQuizYAML(yamlText);
        console.log('Quiz data loaded:', quizData);
      } catch (error) {
        console.error('Failed to load quiz data:', error);
        // フォールバック問題データ
        quizData = {
          title: '2進数変換',
          questions: [
            {
              id: 'q1',
              title: '2進数から10進数への変換',
              description: '2進数「1010」を10進数に変換してください。',
              options: [
                { id: 'a', text: '8', isCorrect: false, explanation: '2進数1010は、1×2³ + 0×2² + 1×2¹ + 0×2⁰ = 8 + 0 + 2 + 0 = 10です。' },
                { id: 'b', text: '10', isCorrect: true, explanation: '正解です！2進数1010は、1×2³ + 0×2² + 1×2¹ + 0×2⁰ = 8 + 0 + 2 + 0 = 10です。' },
                { id: 'c', text: '12', isCorrect: false, explanation: '2進数1010は、1×2³ + 0×2² + 1×2¹ + 0×2⁰ = 8 + 0 + 2 + 0 = 10です。' },
                { id: 'd', text: '14', isCorrect: false, explanation: '2進数1010は、1×2³ + 0×2² + 1×2¹ + 0×2⁰ = 8 + 0 + 2 + 0 = 10です。' }
              ]
            },
            {
              id: 'q2',
              title: '10進数から2進数への変換',
              description: '10進数「13」を2進数に変換してください。',
              options: [
                { id: 'a', text: '1011', isCorrect: false, explanation: '10進数13を2進数に変換すると1101です。' },
                { id: 'b', text: '1101', isCorrect: true, explanation: '正解です！10進数13を2進数に変換すると1101です。' },
                { id: 'c', text: '1110', isCorrect: false, explanation: '10進数13を2進数に変換すると1101です。' },
                { id: 'd', text: '1111', isCorrect: false, explanation: '10進数13を2進数に変換すると1101です。' }
              ]
            },
            {
              id: 'q3',
              title: '2進数の理解',
              description: '2進数「101」を10進数に変換してください。',
              options: [
                { id: 'a', text: '4', isCorrect: false, explanation: '2進数101は、1×2² + 0×2¹ + 1×2⁰ = 4 + 0 + 1 = 5です。' },
                { id: 'b', text: '5', isCorrect: true, explanation: '正解です！2進数101は、1×2² + 0×2¹ + 1×2⁰ = 4 + 0 + 1 = 5です。' },
                { id: 'c', text: '6', isCorrect: false, explanation: '2進数101は、1×2² + 0×2¹ + 1×2⁰ = 4 + 0 + 1 = 5です。' },
                { id: 'd', text: '7', isCorrect: false, explanation: '2進数101は、1×2² + 0×2¹ + 1×2⁰ = 4 + 0 + 1 = 5です。' }
              ]
            }
          ]
        };
        console.log('Using fallback data with', quizData.questions.length, 'questions');
      }
    }

    // 簡易YAML解析（問題データ用）
    function parseQuizYAML(yamlText) {
      console.log('Parsing YAML:', yamlText.substring(0, 500));
      const lines = yamlText.split('\n');
      const data = { questions: [] };
      let currentQuestion = null;
      let currentOption = null;
      let inQuestions = false;
      let inOptions = false;
      
      for (let i = 0; i < lines.length; i++) {
        const line = lines[i];
        const trimmed = line.trim();
        const indent = line.length - line.trimStart().length;
        
        if (!trimmed || trimmed.startsWith('#')) continue;
        
        // questionsセクションの開始
        if (trimmed === 'questions:') {
          inQuestions = true;
          continue;
        }
        
        // questionsセクション内での処理
        if (inQuestions) {
          // 新しい問題の開始（インデント2）
          if (indent === 2 && trimmed.startsWith('- id:')) {
            // 前の問題を保存
            if (currentQuestion) {
              if (currentOption) {
                currentQuestion.options.push(currentOption);
                currentOption = null;
              }
              data.questions.push(currentQuestion);
            }
            // 新しい問題を開始
            currentQuestion = { 
              id: trimmed.substring(5).trim().replace(/['"]/g, ''), 
              options: [],
              title: '',
              description: ''
            };
            inOptions = false;
          }
          // 問題のプロパティ（インデント4）
          else if (indent === 4 && currentQuestion && trimmed.includes(':')) {
            const [key, ...valueParts] = trimmed.split(':');
            const value = valueParts.join(':').trim().replace(/['"]/g, '');
            
            if (key === 'title') {
              currentQuestion.title = value;
            } else if (key === 'description') {
              currentQuestion.description = value;
            } else if (key === 'options') {
              inOptions = true;
            }
          }
          // 選択肢の開始（インデント6）
          else if (indent === 6 && inOptions && trimmed.startsWith('- id:')) {
            if (currentOption) {
              currentQuestion.options.push(currentOption);
            }
            currentOption = { 
              id: trimmed.substring(5).trim().replace(/['"]/g, ''),
              text: '',
              isCorrect: false,
              explanation: ''
            };
          }
          // 選択肢のプロパティ（インデント8）
          else if (indent === 8 && currentOption && trimmed.includes(':')) {
            const [key, ...valueParts] = trimmed.split(':');
            const value = valueParts.join(':').trim().replace(/['"]/g, '');
            
            if (key === 'text') {
              currentOption.text = value;
            } else if (key === 'isCorrect') {
              currentOption.isCorrect = value === 'true';
            } else if (key === 'explanation') {
              currentOption.explanation = value;
            }
          }
        }
      }
      
      // 最後の問題と選択肢を保存
      if (currentOption && currentQuestion) {
        currentQuestion.options.push(currentOption);
      }
      if (currentQuestion) {
        data.questions.push(currentQuestion);
      }
      
      console.log('Parsed questions:', data.questions.length);
      return data;
    }

    // 問題演習を開始（名前入力後）
    function startQuizQuestions() {
      // 名前が既に保存されていない場合のみ入力から取得
      if (!studentName || !studentName.trim()) {
        const nameInput = document.getElementById('student-name');
        if (!nameInput) {
          console.error('Name input not found');
          return;
        }
        
        studentName = nameInput.value.trim();
        if (!studentName) {
          alert('お名前を入力してください');
          return;
        }
        
        // ローカルストレージに名前を保存
        localStorage.setItem('binaryQuizStudentName', studentName);
        console.log('Name saved to localStorage:', studentName);
      }
      
      // データが読み込まれていることを確認
      if (!quizData || !quizData.questions || quizData.questions.length === 0) {
        console.error('Quiz data not loaded');
        alert('問題データの読み込みに失敗しました。ページを再読み込みしてください。');
        return;
      }
      
      console.log('Starting quiz with', quizData.questions.length, 'questions');
      
      document.getElementById('name-input-section').style.display = 'none';
      document.getElementById('question-section').style.display = 'block';
      
      currentQuestionIndex = 0;
      correctAnswers = 0;
      incorrectAnswers = 0;
      selectedAnswer = null;
      
      // スコア表示を初期化
      document.getElementById('correct-score').textContent = '0';
      document.getElementById('incorrect-score').textContent = '0';
      
      showQuestion();
    }

    // 問題を表示
    function showQuestion() {
      console.log('showQuestion called:', { quizData, currentQuestionIndex, questionsLength: quizData?.questions?.length });
      
      if (!quizData || !quizData.questions || currentQuestionIndex >= quizData.questions.length) {
        console.log('No more questions, showing results');
        showResults();
        return;
      }
      
      const question = quizData.questions[currentQuestionIndex];
      document.getElementById('question-counter').textContent = `問題 ${currentQuestionIndex + 1} / ${quizData.questions.length}`;
      document.getElementById('question-title').textContent = question.title || '';
      document.getElementById('question-description').textContent = question.description || '';
      
      // 選択肢を表示
      const optionsContainer = document.getElementById('options-container');
      optionsContainer.innerHTML = '';
      
      question.options.forEach(option => {
        const optionElement = document.createElement('label');
        optionElement.style.cssText = 'display: block; padding: 1rem; border: 2px solid #e2e8f0; border-radius: 0.5rem; margin-bottom: 1rem; cursor: pointer; transition: all 0.2s ease;';
        optionElement.innerHTML = `
          <input type="radio" name="quiz-option" value="${option.id}" style="margin-right: 0.5rem;">
          <span>${option.text}</span>
        `;
        optionElement.addEventListener('click', function() {
          selectedAnswer = option.id;
          document.getElementById('submit-answer').disabled = false;
          // 他の選択肢のスタイルをリセット
          optionsContainer.querySelectorAll('label').forEach(label => {
            label.style.borderColor = '#e2e8f0';
            label.style.backgroundColor = 'white';
          });
          // 選択した選択肢をハイライト
          this.style.borderColor = '#3b82f6';
          this.style.backgroundColor = '#f0f9ff';
        });
        
        optionsContainer.appendChild(optionElement);
      });
      
      // フィードバックセクションを隠す
      document.getElementById('feedback-section').style.display = 'none';
      document.getElementById('question-content').style.display = 'block';
      selectedAnswer = null;
      document.getElementById('submit-answer').disabled = true;
    }

    // 回答を提出
    function submitAnswer() {
      if (!selectedAnswer) return;
      
      const question = quizData.questions[currentQuestionIndex];
      const selectedOption = question.options.find(opt => opt.id === selectedAnswer);
      const isCorrect = selectedOption.isCorrect;
      
      if (isCorrect) {
        correctAnswers++;
      } else {
        incorrectAnswers++;
      }
      
      // スコア更新
      document.getElementById('correct-score').textContent = correctAnswers;
      document.getElementById('incorrect-score').textContent = incorrectAnswers;
      
      // フィードバック表示
      const feedbackContent = document.getElementById('feedback-content');
      const feedbackHtml = `
        <div style="padding: 1.5rem; border-radius: 0.75rem; ${isCorrect ? 'background: #dcfce7; border: 1px solid #22c55e;' : 'background: #fee2e2; border: 1px solid #ef4444;'}">
          <h4 style="color: ${isCorrect ? '#22c55e' : '#ef4444'}; margin-bottom: 1rem;">
            ${isCorrect ? '🎉 正解！' : '❌ 不正解'}
          </h4>
          <p style="margin-bottom: 1rem;">${selectedOption.explanation}</p>
          ${question.options.map(opt => `
            <div style="margin-bottom: 0.5rem; padding: 0.5rem; border-radius: 0.25rem; ${opt.isCorrect ? 'background: rgba(34, 197, 94, 0.1); color: #22c55e;' : opt.id === selectedAnswer && !opt.isCorrect ? 'background: rgba(239, 68, 68, 0.1); color: #ef4444;' : 'color: #6b7280;'}">
              ${opt.isCorrect ? '✓' : opt.id === selectedAnswer ? '✗' : '○'} ${opt.text}
            </div>
          `).join('')}
        </div>
      `;
      
      feedbackContent.innerHTML = feedbackHtml;
      document.getElementById('question-content').style.display = 'none';
      document.getElementById('feedback-section').style.display = 'block';
      
      // 次の問題ボタンのテキスト更新
      const nextButton = document.getElementById('next-question');
      nextButton.textContent = currentQuestionIndex >= quizData.questions.length - 1 ? '結果を見る' : '次の問題';
    }

    // 次の問題へ
    function nextQuestion() {
      currentQuestionIndex++;
      showQuestion();
    }

    // 結果表示
    function showResults() {
      console.log('showResults called, studentName:', studentName);
      
      document.getElementById('question-section').style.display = 'none';
      document.getElementById('results-section').style.display = 'block';
      
      const totalQuestions = quizData.questions.length;
      const percentage = Math.round((correctAnswers / totalQuestions) * 100);
      
      document.getElementById('final-score').innerHTML = `
        <div style="color: #3b82f6;">${correctAnswers} / ${totalQuestions} 問正解</div>
        <div style="color: #6b7280; font-size: 1.2rem; margin-top: 0.5rem;">${percentage}%</div>
      `;
      
      let message = '';
      if (percentage === 100) {
        message = `<div style="background: #dcfce7; padding: 2rem; border-radius: 1rem; border: 1px solid #22c55e;">
          <h4 style="color: #22c55e; margin-bottom: 1rem;">🏆 パーフェクト！</h4>
          <p>${studentName}さん、全問正解おめでとうございます！<br>2進数変換を完全にマスターしました！</p>
        </div>`;
      } else if (percentage >= 80) {
        message = `<div style="background: #fef3c7; padding: 2rem; border-radius: 1rem; border: 1px solid #f59e0b;">
          <h4 style="color: #f59e0b; margin-bottom: 1rem;">🎉 優秀！</h4>
          <p>${studentName}さん、素晴らしい成績です！<br>2進数変換をよく理解されています！</p>
        </div>`;
      } else {
        message = `<div style="background: #f0f9ff; padding: 2rem; border-radius: 1rem; border: 1px solid #3b82f6;">
          <h4 style="color: #3b82f6; margin-bottom: 1rem;">📚 もう少し！</h4>
          <p>${studentName}さん、基本は理解できています！<br>レッスンを復習してもう一度挑戦してみましょう！</p>
        </div>`;
      }
      
      document.getElementById('completion-message').innerHTML = message;
      
      // 名前がローカルストレージに保存されているか確認
      console.log('localStorage studentName:', localStorage.getItem('binaryQuizStudentName'));
    }

    // クイズをリセット
    function resetQuiz() {
      // ローカルストレージから名前を復元
      if (!studentName || !studentName.trim()) {
        studentName = localStorage.getItem('binaryQuizStudentName') || '';
      }
      
      console.log('resetQuiz called, studentName:', studentName);
      
      // 全てのセクションを非表示にする
      document.getElementById('results-section').style.display = 'none';
      document.getElementById('question-section').style.display = 'none';
      document.getElementById('quiz-app').style.display = 'none';
      
      // イントロ画面を表示
      document.getElementById('quiz-intro').style.display = 'block';
      
      // 名前が既に入力されている場合はスキップ
      if (studentName && studentName.trim()) {
        console.log('Name exists, showing retry screen for:', studentName);
        // 名前確認画面を表示
        document.getElementById('name-input-section').style.display = 'block';
        document.getElementById('name-input-section').innerHTML = `
          <div style="text-align: center; padding: 2rem;">
            <h3 style="margin-bottom: 1rem;">🎯 もう一度挑戦！</h3>
            <p style="color: #6b7280; margin-bottom: 1rem;">${studentName}さん、再挑戦しますか？</p>
            <div style="margin-bottom: 2rem;">
              <button onclick="restartQuizDirectly()" style="background: #22c55e; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer; margin-right: 1rem;">はい、再挑戦！</button>
              <button onclick="resetStudentName()" style="background: #6b7280; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;">別の名前で挑戦</button>
            </div>
          </div>
        `;
      } else {
        console.log('No name found, showing name input screen');
        // 初回の名前入力画面を表示
        document.getElementById('name-input-section').style.display = 'block';
        document.getElementById('name-input-section').innerHTML = `
          <h3 style="margin-bottom: 1rem;">お名前を入力してください</h3>
          <p style="color: #6b7280; margin-bottom: 2rem;">修了証に記載するお名前をご入力ください</p>
          <input type="text" id="student-name" placeholder="お名前" style="padding: 1rem; font-size: 1.2rem; border: 2px solid #e2e8f0; border-radius: 0.5rem; margin-right: 1rem; width: 200px;">
          <button onclick="startQuizQuestions()" style="background: #22c55e; color: white; border: none; padding: 1rem 2rem; border-radius: 0.5rem; font-size: 1.1rem; cursor: pointer;">開始</button>
        `;
      }
      
      // 変数をリセット（名前以外）
      currentQuestionIndex = 0;
      correctAnswers = 0;
      incorrectAnswers = 0;
      selectedAnswer = null;
      
      // スコア表示をリセット
      const correctScore = document.getElementById('correct-score');
      const incorrectScore = document.getElementById('incorrect-score');
      if (correctScore) correctScore.textContent = '0';
      if (incorrectScore) incorrectScore.textContent = '0';
    }
    
    // 名前をリセットして新しい名前で挑戦
    function resetStudentName() {
      studentName = '';
      localStorage.removeItem('binaryQuizStudentName');
      console.log('Student name reset');
      resetQuiz();
    }
    
    // 直接問題演習を再開始（名前保持）
    function restartQuizDirectly() {
      console.log('Restarting quiz directly with name:', studentName);
      
      // データが読み込まれていることを確認
      if (!quizData || !quizData.questions || quizData.questions.length === 0) {
        console.error('Quiz data not loaded');
        alert('問題データの読み込みに失敗しました。ページを再読み込みしてください。');
        return;
      }
      
      document.getElementById('name-input-section').style.display = 'none';
      document.getElementById('question-section').style.display = 'block';
      
      currentQuestionIndex = 0;
      correctAnswers = 0;
      incorrectAnswers = 0;
      selectedAnswer = null;
      
      // スコア表示を初期化
      document.getElementById('correct-score').textContent = '0';
      document.getElementById('incorrect-score').textContent = '0';
      
      showQuestion();
    }

    // グローバル関数として公開
    window.nextSlide = nextSlide;
    window.prevSlide = prevSlide;
    window.goToSlide = goToSlide;
    window.toggleBit = toggleBit;
    window.startEmbeddedQuiz = startEmbeddedQuiz;
    window.startQuizQuestions = startQuizQuestions;
    window.submitAnswer = submitAnswer;
    window.nextQuestion = nextQuestion;
    window.resetQuiz = resetQuiz;
    window.resetStudentName = resetStudentName;
    window.restartQuizDirectly = restartQuizDirectly;

    // 初期化
    updateConverter();
    
    // ページ読み込み時にローカルストレージから名前を復元
    const savedName = localStorage.getItem('binaryQuizStudentName');
    if (savedName) {
      studentName = savedName;
      console.log('Restored name from localStorage:', studentName);
    }
  </script>
</body>
</html>